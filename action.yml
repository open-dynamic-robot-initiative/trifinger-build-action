# Build the package and run tests, using the latest trifinger_user Apptainer
# image.
# The Apptainer image has a full ROBOT_FINGERS workspace installed, so all
# dependencies are there and only the checked package needs to be build, not the
# whole workspace.
#
# Note: The Apptainer image only gets automatically rebuild, if something in the
# image definition changes, not when other packages are changed.  So to avoid
# that the workspace in the container gets outdated, manual builds need to be
# triggered regularly.

name: Build and Test TriFinger Package
description: |
  Build a package using colcon inside the latest "trifinger_user" container.  If
  'build_docs' is set, the documentation of the package is build using breathing
  cat and deployed to GitHub Pages (.
  Finally, if 'run_tests' is set, the unit tests of the package are run.

inputs:
  build_doc:
    description: "If set, the documentation is built using breathing cat."
    type: boolean
    required: true
    default: false
  run_tests:
    description: "If set, the unit tests are run."
    type: boolean
    required: true
    default: false

runs:
  using: "composite"
  steps:
    - name: Install Apptainer
      run: |
        APPTAINER_VERSION=1.1.2
        wget https://github.com/apptainer/apptainer/releases/download/v${APPTAINER_VERSION}/apptainer_${APPTAINER_VERSION}_amd64.deb
        sudo apt-get install ./apptainer_${APPTAINER_VERSION}_amd64.deb

    - name: Check out code
      uses: actions/checkout@v3

    - name: Pull Container
      run: |
        apptainer pull oras://ghcr.io/open-dynamic-robot-initiative/trifinger_singularity/trifinger_user:latest

    - name: Add matcher for gcc warnings
      run: |
        echo "::add-matcher::.github/workflows/gcc_problem_matcher.json"

    - name: Build
      run: ./trifinger_user_latest.sif colcon build


    # BEGIN: Build documentation

    - name: Build documentation
      if: github.event.inputs.build_doc
      run: |
        pkg_name=${GITHUB_REPOSITORY#*/}
        ./trifinger_user_latest.sif bcat -o docbuild -p . --python-dir install/${pkg_name}/lib/python3.8/site-packages/${pkg_name}
    - name: Upload documentation artifact
      if: github.event.inputs.build_doc
      uses: actions/upload-pages-artifact@v1
      with:
        path: 'docbuild/html'
    - name: Deploy to GitHub Pages
      if: github.event.inputs.build_doc
      id: deployment
      uses: actions/deploy-pages@v1

    # END: Build documentation


    - name: Run tests
      if: github.event.inputs.run_tests
      run: |
        pkg_name=${GITHUB_REPOSITORY#*/}
        echo "Run tests of package ${pkg_name}"
        ./trifinger_user_latest.sif colcon test --packages-select=${pkg_name}
        ./trifinger_user_latest.sif colcon test-result --verbose


